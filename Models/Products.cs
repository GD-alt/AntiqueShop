//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AntiqueShop.Models
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Windows;

    public partial class Products
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Products()
        {
            this.CartItems = new HashSet<CartItems>();
            this.Favourites = new HashSet<Favourites>();
            this.Allergens = new HashSet<Allergens>();
        }
    
        public int product_id { get; set; }
        public string name { get; set; }
        public string description { get; set; }
        public decimal price { get; set; }
        public int category_id { get; set; }
        public string image_url { get; set; }
        public string image_path
        {
            get
            {
                if (!File.Exists($"../../Images/{image_url}"))
                {
                    return "../Images/placeholder.jpg";
                }

                return $"../Images/{image_url}";
            }
        }
        public int stock { get; set; }
        public Visibility featured
        {
            get
            {
                if (stock > 0)
                {
                    return Visibility.Visible;
                }
                else
                {
                    return Visibility.Hidden;
                }
            }
        }
        public string allergens
        {
            get
            {
                string result = "";

                foreach (var allergen in Allergens)
                {
                    result += allergen.allergen_name + ", ";
                }

                result = result.TrimEnd(' ').TrimEnd(',');

                if (result == "")
                {
                    return "Отсутствуют";
                }

                return result;
            }
        }
        public byte is_featured { get; set; }
        public int nutrition_id { get; set; }
        public string nutrition_facts
        {
            get
            {
                return $"{NutritionFacts.calories} ккал, {NutritionFacts.protein} г белка, {NutritionFacts.fats} г жиров, {NutritionFacts.carbohydrates} г углеводов";
            }
        }
        public int packaging_id { get; set; }
        public int storage_condition_id { get; set; }
        public string storage_instructions
        {
            get
            {
                return $"{StorageConditions.temperature_range}, {StorageConditions.humidity_range}";
            }
        }
        public int shelf_life_days { get; set; }
        public int weight_grams { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CartItems> CartItems { get; set; }
        public virtual Categories Categories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Favourites> Favourites { get; set; }
        public virtual NutritionFacts NutritionFacts { get; set; }
        public virtual PackagingTypes PackagingTypes { get; set; }
        public virtual StorageConditions StorageConditions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Allergens> Allergens { get; set; }
    }
}
